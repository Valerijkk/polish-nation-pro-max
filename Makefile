# Имя итогового бинарного файла
TARGET = graph

# Папка, куда будут складываться скомпилированные файлы/исполняемый файл
BUILD_DIR = build

# Папка, где лежат исходники .c и заголовки .h
SRC_DIR = src

# Компилятор
CC = gcc

# Флаги компилятора:
# -Wall       - включить все предупреждения
# -Werror     - считать все предупреждения за ошибки
# -std=c11    - использовать стандарт языка C11
CFLAGS = -Wall -Wextra -Werror -std=c11

# Основная цель сборки (по умолчанию)
all: $(BUILD_DIR)/$(TARGET)

# Правило для сборки исполняемого файла из исходников
# Обратите внимание, что мы указываем зависимости (graph.c и graph.h),
# чтобы при изменении заголовка тоже пересобиралось
$(BUILD_DIR)/$(TARGET): $(SRC_DIR)/graph.c $(SRC_DIR)/graph.h
	mkdir -p $(BUILD_DIR)                         # Создаём папку для результатов, если её нет
	$(CC) $(CFLAGS) $(SRC_DIR)/graph.c -o $(BUILD_DIR)/$(TARGET) -lm   # Компилируем и линкуем с -lm (мат. библиотека)

# Дополнительное правило для очистки: удаляем скомпилированный бинарник
clean:
	rm -rf $(BUILD_DIR)/$(TARGET)
